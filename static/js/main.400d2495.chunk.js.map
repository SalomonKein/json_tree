{"version":3,"sources":["components/Childpoint.module.css","components/Myiteratelist.module.css","context.js","components/Childpoint.js","hoc/withCollapse.js","components/Myiteratelist.js","query/continents.js","App.js","index.js"],"names":["module","exports","Context","React","createContext","whithCollapse","Component","onClickHandler","e","target","classList","contains","cn","hide","remove","add","props","cloneElement","onClick","isCollapse","useContext","className","secondlvl","element","Myiteratelist","collapseAll","array","data","continents","iterate","arr","map","Object","keys","key","Array","firstlvl","name","thirdlvl","Date","now","Math","random","length","lastlvl","GET_ALL_CONTINENT","gql","App","useQuery","loading","useState","setIsCollapse","Provider","value","client","ApolloClient","uri","cache","InMemoryCache","addTypename","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,2B,mBCAnED,EAAOC,QAAU,CAAC,SAAW,gCAAgC,QAAU,+BAA+B,SAAW,gCAAgC,KAAO,8B,iHCC3IC,EAAUC,IAAMC,gB,iCCgBdC,MCfA,SAAsBC,GACnC,IAAMC,EAAiB,SAACC,GAClBA,EAAEC,OAAOC,UAAUC,SAASC,IAAGC,MACjCL,EAAEC,OAAOC,UAAUI,OAAOF,IAAGC,MAE7BL,EAAEC,OAAOC,UAAUK,IAAIH,IAAGC,OAI9B,OAAO,SAACG,GACN,OAAOb,IAAMc,aAAa,cAACX,EAAD,eAAeU,IAAW,CAClDE,QAASX,KDIAF,EAbf,SAAoBW,GAClB,IAAOG,EAAcC,qBAAWlB,GAAzBiB,WAEP,OACE,sBACEE,UAAWF,EAAU,UAAMP,IAAGU,UAAT,aAAuBV,IAAGC,MAA1B,UAAsCD,IAAGU,WAC9DJ,QAASF,EAAME,QAFjB,SAIGF,EAAMO,a,iBENE,SAASC,IACtB,MAA4BJ,qBAAWlB,GAAhCuB,EAAP,EAAOA,YAMHC,EANJ,EAAoBC,KAMHC,WA2BjB,OAAO,qBAAKP,UAAW,YAAhB,SAzBP,SAASQ,EAAQC,GACf,OAAOA,EAAIC,KAAI,SAACvB,GACd,OAAOwB,OAAOC,KAAKzB,GAAGuB,KAAI,SAACG,GACzB,OAAO1B,EAAE0B,aAAgBC,MACvB,sBAAsCd,UAAWT,IAAGwB,SAApD,UACE,cAAC,EAAD,CAAYb,QAASf,EAAE6B,OACvB,sBAAMhB,UAAWT,IAAG0B,SAApB,SAA+BT,EAAQrB,EAAE0B,QAFjCK,KAAKC,MAAQC,KAAKC,UAI1BV,OAAOC,KAAKzB,GAAGmC,QAAU,EAC3BX,OAAOC,KAAKzB,GAAGuB,KAAI,SAACG,GAClB,MAAyB,kBAAX1B,EAAE0B,GAAoB,KAClC,qBAEEb,UAAWT,IAAGgC,QACd1B,QAASO,EAHX,SAKGjB,EAAE6B,MAJEE,KAAKC,MAAQC,KAAKC,aAQ3B,WAK2Bb,CAAQH,K,sBCvClCmB,EAAoBC,YAAH,2KCyBfC,MArBf,WACE,MAAwBC,YAASH,GAA1BlB,EAAP,EAAOA,KAAMsB,EAAb,EAAaA,QACb,EAAoCC,oBAAS,GAA7C,mBAAO/B,EAAP,KAAmBgC,EAAnB,KAEA,OAAIF,EACK,4CAQP,cAAC/C,EAAQkD,SAAT,CAAkBC,MAAO,CAAC5B,YAL5B,WACe0B,GAAbhC,IAIuCA,aAAYQ,QAAnD,SACE,qBAAKN,UAAU,MAAf,SACE,cAACG,EAAD,S,gCCfF8B,EAAS,IAAIC,IAAa,CAC9BC,IAAK,8CACLC,MAAO,IAAIC,IAAc,CACvBC,aAAa,MAIjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBT,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.400d2495.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondlvl\":\"Childpoint_secondlvl__105I8\",\"hide\":\"Childpoint_hide__3OGjv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"firstlvl\":\"Myiteratelist_firstlvl__3PCnP\",\"lastlvl\":\"Myiteratelist_lastlvl__1M7_0\",\"thirdlvl\":\"Myiteratelist_thirdlvl__2rOZw\",\"hide\":\"Myiteratelist_hide__2fyoe\"};","import React from \"react\";\r\n\r\nexport const Context = React.createContext();\r\n","import React, {useContext} from \"react\";\r\nimport cn from \"./Childpoint.module.css\";\r\nimport whithCollapse from \"../hoc/withCollapse\";\r\nimport {Context} from \"../context\";\r\n\r\nfunction Childpoint(props) {\r\n  const {isCollapse} = useContext(Context);\r\n\r\n  return (\r\n    <span\r\n      className={isCollapse ? `${cn.secondlvl}  ${cn.hide}` : `${cn.secondlvl}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.element}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default whithCollapse(Childpoint);\r\n","import React from \"react\";\r\nimport cn from \"../components/Childpoint.module.css\";\r\n\r\nexport default function withCollapse(Component) {\r\n  const onClickHandler = (e) => {\r\n    if (e.target.classList.contains(cn.hide)) {\r\n      e.target.classList.remove(cn.hide);\r\n    } else {\r\n      e.target.classList.add(cn.hide);\r\n    }\r\n  };\r\n\r\n  return (props) => {\r\n    return React.cloneElement(<Component {...props} />, {\r\n      onClick: onClickHandler,\r\n    });\r\n  };\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport {Context} from \"../context\";\r\n// import arrayForStart from \"../resource/arrayForStart\";\r\n// import createJSONTree from \"../resource/createJSONTree\";\r\nimport Childpoint from \"./Childpoint\";\r\nimport cn from \"./Myiteratelist.module.css\";\r\n\r\nexport default function Myiteratelist() {\r\n  const {collapseAll, data} = useContext(Context);\r\n\r\n  //  let array = arrayForStart(); // - hand mock array, use with import\r\n\r\n  // const array = createJSONTree(5, 3); // - custom generated array, use with import\r\n\r\n  let array = data.continents; // - array from query\r\n\r\n  function iterate(arr) {\r\n    return arr.map((e) => {\r\n      return Object.keys(e).map((key) => {\r\n        return e[key] instanceof Array ? (\r\n          <div key={Date.now() * Math.random()} className={cn.firstlvl}>\r\n            <Childpoint element={e.name} />\r\n            <span className={cn.thirdlvl}>{iterate(e[key])}</span>\r\n          </div>\r\n        ) : Object.keys(e).length <= 1 ? (\r\n          Object.keys(e).map((key) => {\r\n            return typeof e[key] === \"object\" ? null : (\r\n              <div\r\n                key={Date.now() * Math.random()}\r\n                className={cn.lastlvl}\r\n                onClick={collapseAll}\r\n              >\r\n                {e.name}\r\n              </div>\r\n            );\r\n          })\r\n        ) : null;\r\n      });\r\n    });\r\n  }\r\n\r\n  return <div className={\"container\"}>{iterate(array)}</div>;\r\n}\r\n","import {gql} from \"@apollo/client\";\r\n\r\nexport const GET_ALL_CONTINENT = gql`\r\n  query {\r\n    continents {\r\n      name\r\n      countries {\r\n        name\r\n        languages {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {useQuery} from \"@apollo/client\";\nimport React, {useState} from \"react\";\nimport Myiteratelist from \"./components/Myiteratelist\";\nimport {Context} from \"./context\";\nimport {GET_ALL_CONTINENT} from \"./query/continents\";\n\nfunction App() {\n  const {data, loading} = useQuery(GET_ALL_CONTINENT);\n  const [isCollapse, setIsCollapse] = useState(true);\n\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n\n  function collapseAll() {\n    isCollapse ? setIsCollapse(false) : setIsCollapse(true);\n  }\n\n  return (\n    <Context.Provider value={{collapseAll, isCollapse, data}}>\n      <div className=\"App\">\n        <Myiteratelist />\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport {ApolloProvider, ApolloClient, InMemoryCache} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://countries.trevorblades.com//graphql\",\n  cache: new InMemoryCache({\n    addTypename: false,\n  }),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}